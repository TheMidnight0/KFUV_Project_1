import telebot
from telebot import types
from prettytable import PrettyTable
import webbrowser
import textwrap
import requests
import math
import json

bot = telebot.TeleBot("6360645906:AAEoP_l2HsgMzRZOxNx2p4CjoD5jnwqU21Q")

def get_basic_name(info):
    result = "%s %s.%s." %(info["surname"], info["name"][0], info["patronymic"][0])
    return result

def get_full_shedule(info, teacher = True):
    Shedule = PrettyTable()
    result = []
    lst = []
    if teacher:
        names = ["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", "–ú–µ—Å—Ç–æ", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]
        jsonNames = ["name", "teacher", "location", "comment"]
    else:
        names = ["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ú–µ—Å—Ç–æ", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]
        jsonNames = ["name", "location", "comment"]
    for index in range(len(info)):
        Shedule.field_names = ["     –ü–∞—Ä–∞    ", "            %d            " %(info[index]["number"])]
        if info[index]["type"] != "":
            info[index]["name"] = "[%s] %s" %(info[index]["type"], info[index]["name"])
        for i in range(len(names)):
            lst = textwrap.wrap(info[index][jsonNames[i]], 25)
            place = math.ceil(len(lst)/2.0)-1
            for j in range(len(lst)):
                if j+1 == len(lst):
                    if place == j:
                        Shedule.add_row([names[i], lst[j]], divider=True)
                    else:
                        Shedule.add_row(["", lst[j]], divider=True)
                else:
                    if place == j:
                        Shedule.add_row([names[i], lst[j]])
                    else:
                        Shedule.add_row(["", lst[j]])
            if len(lst) == 0:
                Shedule.add_row([names[i], ""], divider=True)
        result.append("```\n%s```" %Shedule)
        Shedule.clear()
    return result


@bot.message_handler(commands=['start', 'help'])
def help(message):
    text = "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ! –ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –º–Ω–æ–π - —Å–æ–≤–µ—Ç—É—é —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ Github, –∞ –∑–∞—Ç–µ–º –∑–∞–π—Ç–∏ –≤ —Å–≤–æ–π /profile –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!\n\n"\
        "*–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å*\n"\
        "/myprofile - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"\
        "/setname - –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è\n"\
        "/setsurname - –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é\n"\
        "/setpatronymic - –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç—á–µ—Å—Ç–≤–æ\n"\
        "/setgroup - –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)\n"\
        "/unlinkgithub - –æ—Ç–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç Github\n"\
        "/toadmin - –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)\n\n"\
        "*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π*"\
        "/nextlesson - –≥–¥–µ –∏ –∫–æ–≥–¥–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–∞—Ä–∞\n"\
        "/getshedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –Ω–µ–¥–µ–ª—é –∏ –¥–µ–Ω—å\n"\
        "/sheduletoday - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"\
        "/sheduletomorrow - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n"\
        "/whereteacher - –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —É—á–∏—Ç–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)\n"\
        "/wheregroup - –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≥—Ä—É–ø–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)\n"\
        "/addcomment - –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–∞—Ä–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)"
    bot.send_message(message.from_user.id, text)

@bot.message_handler(commands=['profile'])
def profile(message):
    try:
        markup = types.InlineKeyboardMarkup()
        name = types.InlineKeyboardButton(text='–ò–º—è', callback_data='setname')
        surname = types.InlineKeyboardButton(text='–§–∞–º–∏–ª–∏—è', callback_data='setsurname')
        patronymic = types.InlineKeyboardButton(text='–û—Ç—á–µ—Å—Ç–≤–æ', callback_data='setpatronymic')
        github = types.InlineKeyboardButton(text='–û—Ç–≤—è–∑–∞—Ç—å Github', callback_data='unlinkgithub')
        markup.row(name, surname, patronymic)
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)

        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return

        if info["surname"] == "":
            info["surname"] = "üö´"

        if info["name"] == "":
            info["name"] = "üö´"

        if info["patronymic"] == "":
            info["patronymic"] = "üö´"

        if info["group"] == "":
            info["group"] = "üö´"

        if info["role"] == "student":
            info["role"] = "—Å—Ç—É–¥–µ–Ω—Ç"
            group = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞', callback_data='setgroup')
            markup.row(group, github)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–∞–º–∏–ª–∏—è:* %s\n*–ò–º—è:* %s\n*–û—Ç—á–µ—Å—Ç–≤–æ:* %s\n*–ì—Ä—É–ø–ø–∞:* %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["group"], info["role"])

        if info["role"] == "teacher":
            info["role"] = "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
            markup.add(github)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–ò–û: *%s %s %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["role"])

        if info["role"] == "admin":
            info["role"] = "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            group = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞', callback_data='setgroup')
            markup.row(group, github)
            admin = types.InlineKeyboardButton(text='–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', callback_data='toadmin', )
            markup.add(admin)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–ò–û: *%s %s %s\n*–ì—Ä—É–ø–ø–∞:* %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["group"], info["role"])

        bot.send_message(message.from_user.id, text, reply_markup = markup, parse_mode='Markdown')
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['setname'])
def setname(message):
    try:
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setname" %message.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–µ –∏–º—è."
        bot.send_message(message.from_user.id, text, reply_markup = markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['setsurname'])
def setsurname(message):
    try:
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setsurname" %message.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é."
        bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['setpatronymic'])
def setpatronymic(message):
    try:
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setpatronymic" %message.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–µ –æ—Ç—á–µ—Å—Ç–≤–æ."
        bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['setgroup'])
def setgroup(message):
    try:
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] != "teacher":
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            button1 = types.KeyboardButton('–ü–ò-–±-–æ-231(1)')
            button2 = types.KeyboardButton('–ü–ò-–±-–æ-231(2)')
            button3 = types.KeyboardButton('–ü–ò-–±-–æ-232(1)')
            button4 = types.KeyboardButton('–ü–ò-–±-–æ-232(2)')
            button5 = types.KeyboardButton('–ü–ò-–±-–æ-233(1)')
            button6 = types.KeyboardButton('–ü–ò-–±-–æ-233(2)')
            button7 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(1)')
            button8 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(2)')
            button9 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(1)')
            button10 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(2)')
            markup.row(button1, button2)
            markup.row(button3, button4)
            markup.row(button5, button6)
            markup.row(button7, button8)
            markup.row(button9, button10)
            requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setgroup" %message.from_user.id)
            text = "–û–∫. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É."
        else:
            markup = types.ReplyKeyboardRemove()
            text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É."
        bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['unlinkgithub'])
def unlinkgithub(message):
    try:
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=unlinkgithub" %message.from_user.id)
        text = "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å —Å–≤–æ–π Github –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ \"–î–∞, –æ—Ç–≤—è–∂–∏—Ç–µ –º–æ–π Github.\", —á—Ç–æ–±—ã –æ—Ç–≤—è–∑–∞—Ç—å –µ–≥–æ."
        bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['toadmin'])
def toadmin(message):
    try:
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] == "admin":
            text = "–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ"
            link = "http://localhost:8040"
            bot.send_message(message.from_user.id, "%s:```\n%s```" %(text, link), reply_markup=markup, parse_mode='Markdown')
        else:
            text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['nextlesson'])
def nextlesson(message):
    try :
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] == "teacher":
            if info["name"] != "" and info["surname"] != "" and info["patronymic"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=nextlesson&fullname=%s" %get_basic_name(info)).text)
                if answer["type"] == "":
                    text = "–°–µ–≥–æ–¥–Ω—è –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–∞—Ä!"
                    bot.send_message(message.from_user.id, text, reply_markup=markup)
                else:
                    lst = []
                    lst.append(answer)
                    shedule = get_full_shedule(lst, False)
                    text = "*–°–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞ –±—É–¥–µ—Ç –≤ %s:%s*\n%s" %(answer["hours"], answer["minutes"], shedule[0])
                    bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. /profile"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            if info["group"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=nextlesson&group=%s" %info["group"]).text)
                if answer["type"] == "":
                    text = "–°–µ–≥–æ–¥–Ω—è –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–∞—Ä!"
                    bot.send_message(message.from_user.id, text, reply_markup=markup)
                else:
                    lst = []
                    lst.append(answer)
                    shedule = get_full_shedule(lst)
                    text = "*–°–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞ –±—É–¥–µ—Ç –≤ %s:%s*\n%s" %(answer["hours"], answer["minutes"], shedule[0])
                    bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à—É –≥—Ä—É–ø–ø—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –µ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ. /setgroup"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['getshedule'])
def getshedule(message):
    try :
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] == "teacher" and info["name"] != "" and info["surname"] != "" and info["patronymic"] != "" or info["role"] != "teacher" and info["group"] != "":
            markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            button1 = types.KeyboardButton('–ß–µ—Ç–Ω–∞—è')
            button2 = types.KeyboardButton('–¢–µ–∫—É—â–∞—è')
            button3 = types.KeyboardButton('–ù–µ—á–µ—Ç–Ω–∞—è')
            markup.row(button1, button2, button3)
            requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=getshedule" %message.from_user.id)
            text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–µ–ª–∏, –ª–∏–±–æ \"–¢–µ–∫—É—â–∞—è\" –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
        elif info["role"] != "teacher" and info["group"] == "":
            markup = types.ReplyKeyboardRemove()
            text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à—É –≥—Ä—É–ø–ø—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –µ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ. /setgroup"
            bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            markup = types.ReplyKeyboardRemove()
            text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. /profile"
            bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['sheduletoday'])
def sheduletoday(message):
    try :
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] == "teacher":
            if info["name"] != "" and info["surname"] != "" and info["patronymic"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=sheduletoday&fullname=%s" %get_basic_name(info)).text)
                shedule = get_full_shedule(answer, False)
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. /profile"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            if info["group"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=sheduletoday&group=%s" %info["group"]).text)
                shedule = get_full_shedule(answer)
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à—É –≥—Ä—É–ø–ø—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –µ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ. /setgroup"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        text = "*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è*"
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')
        for lesson in shedule:
            bot.send_message(message.from_user.id, lesson, parse_mode='Markdown')
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['sheduletomorrow'])
def sheduletoday(message):
    try :
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] == "teacher":
            if info["name"] != "" and info["surname"] != "" and info["patronymic"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=sheduletomorrow&fullname=%s" %get_basic_name(info)).text)
                shedule = get_full_shedule(answer, False)
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. /profile"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            if info["group"] != "":
                answer = json.loads(requests.get("http://localhost:8050/getshedule?command=sheduletomorrow&group=%s" %info["group"]).text)
                shedule = get_full_shedule(answer)
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à—É –≥—Ä—É–ø–ø—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –µ–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ. /setgroup"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        text = "*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞*"
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')
        for lesson in shedule:
            bot.send_message(message.from_user.id, lesson, parse_mode='Markdown')
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['whereteacher'])
def whereteacher(message):
    try :
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] != "teacher":
            markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            button1 = types.KeyboardButton('–ê—Ö—Ä–∞–º–æ–≤–∏—á –õ.–ù.')
            button2 = types.KeyboardButton('–í–∞—Ä–µ–Ω–∏–∫ –ú.–Æ.')
            button3 = types.KeyboardButton('–ì–∞–ª—É—à–∫–æ –í.–ò.')
            button4 = types.KeyboardButton('–ì–æ—Ä—Å–∫–∞—è –ò.–Æ.')
            button5 = types.KeyboardButton('–ï–ø–∏—à–∫–∏–Ω –ò.–í.')
            button6 = types.KeyboardButton('–ò–ª—å–∏–Ω–∞ –í.–Æ.')
            button7 = types.KeyboardButton('–ö–∏—Å–ª–∏—Ü–∏–Ω–∞ –ù.–ù.')
            button8 = types.KeyboardButton('–ö–ª–∏–º–µ–Ω–∫–æ –ï.–ü.')
            button9 = types.KeyboardButton('–ö–æ—Ä–Ω–∏–µ–Ω–∫–æ –ê.–Æ.')
            button10 = types.KeyboardButton('–ö–æ—Ä–Ω—É—Ç–∞ –ê.–ê.')
            button11 = types.KeyboardButton('–ö—Ä—é–∫–æ–≤ –°.–ê.')
            button12 = types.KeyboardButton('–õ–µ–π–±–µ–Ω—Å–æ–Ω –Æ.–¢.')
            button13 = types.KeyboardButton('–ú–∞–ª—å—Ü–µ–≤ –í.–ê.')
            button14 = types.KeyboardButton('–ú–∞—Ä—è–Ω–∏–Ω –ë.–î.')
            button15 = types.KeyboardButton('–ú–µ–ª—å–Ω–∏—á–µ–Ω–∫–æ –¢.–í.')
            button16 = types.KeyboardButton('–ù–µ–ø–æ–º–Ω—è—â–∏–π –ê.–ê.')
            button17 = types.KeyboardButton('–†—É–¥–Ω–∏—Ü–∫–∞—è –õ.–ò.')
            button18 = types.KeyboardButton('–†—É–µ–≤ –í.–õ.')
            button19 = types.KeyboardButton('–°–∞–≥–∞–π–¥–∞–∫ –û.–ò.')
            button20 = types.KeyboardButton('–°–º–∏—Ä–Ω–æ–≤–∞ –°.–ò.')
            button21 = types.KeyboardButton('–¢–æ–º–∏—á–µ–≤–∞ –ò.–í.')
            button22 = types.KeyboardButton('–§–∞–±—Ä–∏–Ω–∞ –ê.–í.')
            button23 = types.KeyboardButton('–ß–∞–±–∞–Ω–æ–≤ –í.–í.')
            button24 = types.KeyboardButton('–®–µ—Å—Ç–∞–∫–æ–≤–∞ –ï.–°.')
            markup.row(button1, button2, button3)
            markup.row(button4, button5, button6)
            markup.row(button7, button8, button9)
            markup.row(button10, button11, button12)
            markup.row(button13, button14, button15)
            markup.row(button16, button17, button18)
            markup.row(button19, button20, button21)
            markup.row(button22, button23, button24)
            requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=whereteacher" %message.from_user.id)
            text = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            markup = types.ReplyKeyboardRemove()
            text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['wheregroup'])
def wheregroup(message):
    try :
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] != "student":
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            button1 = types.KeyboardButton('–ü–ò-–±-–æ-231(1)')
            button2 = types.KeyboardButton('–ü–ò-–±-–æ-231(2)')
            button3 = types.KeyboardButton('–ü–ò-–±-–æ-232(1)')
            button4 = types.KeyboardButton('–ü–ò-–±-–æ-232(2)')
            button5 = types.KeyboardButton('–ü–ò-–±-–æ-233(1)')
            button6 = types.KeyboardButton('–ü–ò-–±-–æ-233(2)')
            button7 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(1)')
            button8 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(2)')
            button9 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(1)')
            button10 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(2)')
            markup.row(button1, button2)
            markup.row(button3, button4)
            markup.row(button5, button6)
            markup.row(button7, button8)
            markup.row(button9, button10)
            requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=wheregroup" %message.from_user.id)
            text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            markup = types.ReplyKeyboardRemove()
            text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –≥—Ä—É–ø–ø—ã."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['addcomment'])
def leavecomment(message):
    try :
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["role"] != "student":
            if info["name"] != "" and info["surname"] != "" and info["patronymic"] != "":
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                button1 = types.KeyboardButton('–ü–ò-–±-–æ-231(1)')
                button2 = types.KeyboardButton('–ü–ò-–±-–æ-231(2)')
                button3 = types.KeyboardButton('–ü–ò-–±-–æ-232(1)')
                button4 = types.KeyboardButton('–ü–ò-–±-–æ-232(2)')
                button5 = types.KeyboardButton('–ü–ò-–±-–æ-233(1)')
                button6 = types.KeyboardButton('–ü–ò-–±-–æ-233(2)')
                button7 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(1)')
                button8 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(2)')
                button9 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(1)')
                button10 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(2)')
                markup.row(button1, button2)
                markup.row(button3, button4)
                markup.row(button5, button6)
                markup.row(button7, button8)
                markup.row(button9, button10)
                markup.row(button1, button2, button3)
                requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=addcomment" %message.from_user.id)
                text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –±—É–¥–µ—Ç–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å."
                bot.send_message(message.from_user.id, text, reply_markup=markup)
            else:
                markup = types.ReplyKeyboardRemove()
                text = "–ù–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à–∏ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. /profile"
                bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            markup = types.ReplyKeyboardRemove()
            text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['cancel'])
def cancel(message):
    try :
        markup = types.ReplyKeyboardRemove()
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %message.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.send_message(message.from_user.id, text, parse_mode='Markdown')
            return
        if info["recent_command"] != "":
            requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
            text = "–ö–æ–º–∞–Ω–¥–∞ %s –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. /help" %info["recent_command"]
            bot.send_message(message.from_user.id, text, reply_markup=markup)
        else:
            text = "–Ø –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ –±—ã–ª –Ω–∏—á–µ–º –∑–∞–Ω—è—Ç, –Ω–æ –ª–∞–¥–Ω–æ."
            bot.send_message(message.from_user.id, text, reply_markup=markup)
    except requests.ConnectionError:
        bot.send_message(message.from_user.id, "–Ø –Ω–µ –º–æ–≥—É –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É, –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.\n–õ–∏–±–æ –∫—Ç–æ-—Ç–æ –≤—ã–∑–≤–∞–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—à–∏–±–∫—É.")

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    try:
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%d" %call.from_user.id).text)
        if info["recent_command"] == "UNAUTHORIZED":
            link = "http://localhost:8060/register?telegram_id=%d" %call.from_user.id
            text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:```\n%s```" %link
            bot.answer_callback_query(call.id, text="–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            bot.send_message(call.from_user.id, text, parse_mode='Markdown')
            return
    except requests.ConnectionError:
        bot.send_message(call.from_user.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º! –û–ø–µ—Ä–∞—Ü–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è.")
        return

    if call.data == 'setname':
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setname(inline)" %call.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–µ –∏–º—è."
        bot.answer_callback_query(call.id, text=text)
        bot.send_message(call.from_user.id, text=text, reply_markup=markup)
    
    if call.data == 'setsurname':
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setsurname(inline)" %call.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é."
        bot.answer_callback_query(call.id, text=text)
        bot.send_message(call.from_user.id, text=text, reply_markup=markup)

    if call.data == 'setpatronymic':
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setpatronymic(inline)" %call.from_user.id)
        text = "–û–∫. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ–µ –æ—Ç—á–µ—Å—Ç–≤–æ."
        bot.answer_callback_query(call.id, text=text)
        bot.send_message(call.from_user.id, text=text, reply_markup=markup)

    if call.data == 'setgroup':
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        button1 = types.KeyboardButton('–ü–ò-–±-–æ-231(1)')
        button2 = types.KeyboardButton('–ü–ò-–±-–æ-231(2)')
        button3 = types.KeyboardButton('–ü–ò-–±-–æ-232(1)')
        button4 = types.KeyboardButton('–ü–ò-–±-–æ-232(2)')
        button5 = types.KeyboardButton('–ü–ò-–±-–æ-233(1)')
        button6 = types.KeyboardButton('–ü–ò-–±-–æ-233(2)')
        button7 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(1)')
        button8 = types.KeyboardButton('–ò–í–¢-–±-–æ-231(2)')
        button9 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(1)')
        button10 = types.KeyboardButton('–ò–í–¢-–±-–æ-232(2)')
        markup.row(button1, button2)
        markup.row(button3, button4)
        markup.row(button5, button6)
        markup.row(button7, button8)
        markup.row(button9, button10)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=setgroup(inline)" %call.from_user.id)
        text = "–û–∫. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É."
        bot.answer_callback_query(call.id, text=text)
        bot.send_message(call.from_user.id, text=text, reply_markup=markup)

    if call.data == 'unlinkgithub':
        markup  = telebot.types.InlineKeyboardMarkup()
        untie = types.InlineKeyboardButton(text='–û—Ç–≤—è–∑–∞—Ç—å', callback_data='unlinkgithubsure')
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='profile')
        markup.row(untie, back)
        text = "–°–µ–π—á–∞—Å –≤–∞—à Github –∞–∫–∫–∞—É–Ω—Ç —Å–≤—è–∑–∞–Ω —Å –¥–∞–Ω–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å —Å–≤–æ–π Github - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
        bot.edit_message_text(message_id=call.message.message_id, text=text, chat_id=call.from_user.id, reply_markup=markup)

    if call.data == 'unlinkgithubsure':
        requests.get("http://localhost:8060/setuser?telegram_id=%d&github_id=%d" %(call.from_user.id, -1))
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–ª–∏ —Å–≤–æ–π Github –∞–∫–∫–∞—É–Ω—Ç.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –Ω–æ–≤—ã–π - –∑–∞–π–¥–∏—Ç–µ –≤ –Ω–µ–≥–æ –Ω–∞ —Å–∞–π—Ç–µ https://github.com\n*–í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–≤ —Å–≤–æ–π Github.* /help"
        bot.edit_message_text(message_id=call.message.message_id, text=text, chat_id=call.from_user.id, parse_mode='Markdown')

    if call.data == 'toadmin':
        markup = types.ReplyKeyboardRemove()
        text = "–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ"
        link = "http://localhost:8040"
        bot.answer_callback_query(call.id, "%s." %text)
        bot.send_message(call.from_user.id, "%s:```\n%s```" %(text, link), reply_markup=markup, parse_mode='Markdown')

    if call.data == 'profile':
        markup = types.InlineKeyboardMarkup()
        name = types.InlineKeyboardButton(text='–ò–º—è', callback_data='setname')
        surname = types.InlineKeyboardButton(text='–§–∞–º–∏–ª–∏—è', callback_data='setsurname')
        patronymic = types.InlineKeyboardButton(text='–û—Ç—á–µ—Å—Ç–≤–æ', callback_data='setpatronymic')
        github = types.InlineKeyboardButton(text='–û—Ç–≤—è–∑–∞—Ç—å Github', callback_data='unlinkgithub')
        markup.row(name, surname, patronymic)

        if info["surname"] == "":
            info["surname"] = "üö´"

        if info["name"] == "":
            info["name"] = "üö´"

        if info["patronymic"] == "":
            info["patronymic"] = "üö´"

        if info["group"] == "":
            info["group"] = "üö´"

        if info["role"] == "student":
            info["role"] = "—Å—Ç—É–¥–µ–Ω—Ç"
            group = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞', callback_data='setgroup')
            markup.row(group, github)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–∞–º–∏–ª–∏—è:* %s\n*–ò–º—è:* %s\n*–û—Ç—á–µ—Å—Ç–≤–æ:* %s\n*–ì—Ä—É–ø–ø–∞:* %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["group"], info["role"])

        if info["role"] == "teacher":
            info["role"] = "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
            markup.add(github)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–ò–û: *%s %s %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["role"])

        if info["role"] == "admin":
            info["role"] = "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            group = types.InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞', callback_data='setgroup')
            markup.row(group, github)
            admin = types.InlineKeyboardButton(text='–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', callback_data='toadmin')
            markup.add(admin)
            text = "*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n*–§–ò–û: *%s %s %s\n*–ì—Ä—É–ø–ø–∞:* %s\n*–°—Ç–∞—Ç—É—Å:* %s" %(info["surname"], info["name"], info["patronymic"], info["group"], info["role"])

        bot.edit_message_text(message_id=call.message.message_id, text=text, chat_id=call.from_user.id, reply_markup=markup, parse_mode='Markdown')


@bot.message_handler(content_types=['text'])
def message_handler(message):
    try:
        info = json.loads(requests.get("http://localhost:8060/login?telegram_id=%d" %message.from_user.id).text)
    except requests.ConnectionError:
        text = "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ, –ª–∏–±–æ –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ï—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è - –∑–Ω–∞—á–∏—Ç —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã."
        bot.send_message(message.from_user.id, text)
        return
    
    if info["recent_command"] == "setname":
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&name=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setname(inline)":
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é', callback_data='profile')
        markup.add(back)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&name=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setsurname":
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&surname=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setsurname(inline)":
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é', callback_data='profile')
        markup.add(back)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&surname=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setpatronymic":
        markup = types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&patronymic=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–û—Ç—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setpatronymic(inline)":
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é', callback_data='profile')
        markup.add(back)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&patronymic=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–û—Ç—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setgroup":
        markup  = telebot.types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&group=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "setgroup(inline)":
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é', callback_data='profile')
        markup.add(back)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&group=%s&recent_command=none" %(message.from_user.id, message.text))
        text = "–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *%s*! /help" %message.text
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == 'unlinkgithub':
        if message.text == "–î–∞, –æ—Ç–≤—è–∂–∏—Ç–µ –º–æ–π Github.":
            markup  = telebot.types.ReplyKeyboardRemove()
            requests.get("http://localhost:8060/setuser?telegram_id=%d&github_id=%d" %(message.from_user.id, -1))
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–ª–∏ —Å–≤–æ–π Github –∞–∫–∫–∞—É–Ω—Ç.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –Ω–æ–≤—ã–π - –∑–∞–π–¥–∏—Ç–µ –≤ –Ω–µ–≥–æ –Ω–∞ —Å–∞–π—Ç–µ https://github.com\n*–í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–≤ —Å–≤–æ–π Github.* /help"
            bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if info["recent_command"] == "getshedule":
        markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        button1 = types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
        button2 = types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫')
        button3 = types.KeyboardButton('–°—Ä–µ–¥–∞')
        button4 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥')
        button5 = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞')
        button6 = types.KeyboardButton('–°—É–±–±–æ—Ç–∞')
        button7 = types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        markup.add(button1, button2, button3, button4, button5, button6, button7)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=%s" %(message.from_user.id, "getsheduleRC" + message.text))
        text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å."
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if "RC" in info["recent_command"]:
        markup  = telebot.types.ReplyKeyboardRemove()
        if info["recent_command"].split("RC")[1] == "–ß–µ—Ç–Ω–∞—è":
            week = 0
        if info["recent_command"].split("RC")[1] == "–ù–µ—á–µ—Ç–Ω–∞—è":
            week = 1
        if info["recent_command"].split("RC")[1] == "–¢–µ–∫—É—â–∞—è":
            week = -1
        if info["role"] == "teacher":
            answer = json.loads(requests.get("http://localhost:8050/getshedule?command=getshedule&fullname=%s&week=%d&day=%s" %(get_basic_name(info), week, message.text)).text)
            shedule = get_full_shedule(answer, False)
        else:
            answer = json.loads(requests.get("http://localhost:8050/getshedule?command=getshedule&group=%s&week=%d&day=%s" %(info["group"], week, message.text)).text)
            shedule = get_full_shedule(answer)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        bot.send_message(message.from_user.id, "*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ %s*" %(message.text.lower()), reply_markup=markup, parse_mode='Markdown')
        for lesson in shedule:
            bot.send_message(message.from_user.id, lesson, parse_mode='Markdown')

    if info["recent_command"] == "whereteacher":
        markup  = telebot.types.ReplyKeyboardRemove()
        answer = json.loads(requests.get("http://localhost:8050/getshedule?command=whereteacher&fullname=%s" %message.text).text)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        lst = []
        lst.append(answer)
        shedule = get_full_shedule(lst, False)
        if answer["type"] != "":
            text = "*–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–∞—Ä–µ:*\n%s" %(shedule[0])
        else:
            text = "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å –Ω–µ –Ω–∞ –ø–∞—Ä–µ!"
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if info["recent_command"] == "wheregroup":
        markup  = telebot.types.ReplyKeyboardRemove()
        answer = json.loads(requests.get("http://localhost:8050/getshedule?command=wheregroup&group=%s" %message.text).text)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        lst = []
        lst.append(answer)
        shedule = get_full_shedule(lst)
        if answer["type"] != "":
            text = "*–ì—Ä—É–ø–ø–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–∞—Ä–µ:*\n%s" %(shedule[0])
        else:
            text = "–ì—Ä—É–ø–ø–∞ —Å–µ–π—á–∞—Å –Ω–µ –Ω–∞ –ø–∞—Ä–µ!"
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if info["recent_command"] == "addcomment":
        markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        button1 = types.KeyboardButton('–ß–µ—Ç–Ω–∞—è')
        button2 = types.KeyboardButton('–¢–µ–∫—É—â–∞—è')
        button3 = types.KeyboardButton('–ù–µ—á–µ—Ç–Ω–∞—è')
        markup.row(button1, button2, button3)
        requests.get("http://localhost:8060/login?telegram_id=%s" %message.from_user.id)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=%s" %(message.from_user.id, info["recent_command"] + "LC" + message.text))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–µ–ª–∏, –ª–∏–±–æ \"–¢–µ–∫—É—â–∞—è\" –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏."
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if "LC" in info["recent_command"] and "LC1" not in info["recent_command"]:
        markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        button1 = types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
        button2 = types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫')
        button3 = types.KeyboardButton('–°—Ä–µ–¥–∞')
        button4 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥')
        button5 = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞')
        button6 = types.KeyboardButton('–°—É–±–±–æ—Ç–∞')
        button7 = types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        markup.add(button1, button2, button3, button4, button5, button6, button7)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=%s" %(message.from_user.id, info["recent_command"] + "LC1" + message.text))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏."
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if "LC1" in info["recent_command"] and "LC2" not in info["recent_command"]:
        markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        button1 = types.KeyboardButton('1')
        button2 = types.KeyboardButton('2')
        button3 = types.KeyboardButton('3')
        button4 = types.KeyboardButton('4')
        button5 = types.KeyboardButton('5')
        button6 = types.KeyboardButton('6')
        button7 = types.KeyboardButton('7')
        markup.add(button1, button2, button3, button4, button5, button6, button7)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=%s" %(message.from_user.id, info["recent_command"] + "LC2" + message.text))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Ä—ã."
        bot.send_message(message.from_user.id, text, reply_markup=markup)

    if "LC2" in info["recent_command"] and "LC3" not in info["recent_command"]:
        markup  = telebot.types.ReplyKeyboardRemove()
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=%s" %(message.from_user.id, info["recent_command"] + "LC3" + message.text))
        text = "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–∞—Ä–µ. –û–Ω –±—É–¥–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –≤–º–µ—Å—Ç–µ —Å –≤–∞—à–∏–º –∏–º–µ–Ω–µ–º, —á—Ç–æ–±—ã —Å—Ç—É–¥–µ–Ω—Ç—ã –∑–Ω–∞–ª–∏, –∫—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. "\
            "*–û—Ç–ø—Ä–∞–≤—å—Ç–µ \"nul\", —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.*\n\n"\
            "–ü—Ä–æ—Å—å–±–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞–∫–∏ \"\\n\" –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤–∞—à–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ–∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–π - *—Ç–∞–±–ª–∏—Ü–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!*"
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

    if "LC3" in info["recent_command"]:
        markup  = telebot.types.ReplyKeyboardRemove()
        group = info["recent_command"].split("LC", 1)[1].split("LC1", 1)[0]
        weekString = info["recent_command"].split("LC", 1)[1].split("LC1", 1)[1].split("LC2", 1)[0]
        day = info["recent_command"].split("LC", 1)[1].split("LC1", 1)[1].split("LC2", 1)[1].split("LC3", 1)[0]
        number = info["recent_command"].split("LC", 1)[1].split("LC1", 1)[1].split("LC2", 1)[1].split("LC3", 1)[1]
        text = message.text
        if weekString == "–ß–µ—Ç–Ω–∞—è":
            week = 0
        if weekString == "–ù–µ—á–µ—Ç–Ω–∞—è":
            week = 1
        if weekString == "–¢–µ–∫—É—â–∞—è":
            week = -1
        answer = json.loads(requests.get("http://localhost:8050/getshedule?command=addcomment&group=%s&fullname=%s&week=%d&day=%s&number=%s&text=%s" %(group, get_basic_name(info), week, day, number, text)).text)
        requests.get("http://localhost:8060/setuser?telegram_id=%d&recent_command=none" %message.from_user.id)
        lst = []
        lst.append(answer)
        shedule = get_full_shedule(lst, False)
        text = "*–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã*\n%s" %(shedule[0])
        bot.send_message(message.from_user.id, text, reply_markup=markup, parse_mode='Markdown')

bot.polling(none_stop=True, interval=0)